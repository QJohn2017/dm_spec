import matplotlib.pyplot as plt
import numpy as np

def var_direction():
    dir1 = [ [ 1, 0, 0], [ 0, 1, 0], [ 0, 0, 1],
             [-1, 1, 1], [ 1,-1, 1], [ 1, 1,-1],
             [-2, 1, 0], [ 1,-2, 0], [-2, 0, 1],
             [ 0,-2, 1], [ 1, 0,-2], [ 0, 1,-2] ]
    dir2 = list( map( lambda a1: map( lambda a2: -1 * a2, a1 ), dir1) )
    dir3 = [ [ 3, 0, 0], [ 0, 3, 0], [ 0, 0, 3],
             [ 2, 1, 0], [ 2, 0, 1], [ 1, 2, 0],
             [ 0, 2, 1], [ 1, 0, 2], [ 0, 1, 2],
             [ 1, 1, 1] ]
    dir4 = list( map( lambda a1: map( lambda a2: -1 * a2, a1 ), dir3) )
    # flatten to obtain a whole list of all directions
    direction = [ elem for s in [dir1, dir2, dir3, dir4] for elem in s ]
    return direction

def var_coord():
    return [ 'x', 'y', 'z' ]

def var_re_im():
    return [ "Re", "Im" ]

def var_key_name( i_dir, i_coo, i_re ):
    return "%s[%2d,%2d,%2d]%c"%(i_re, i_dir[0], i_dir[1], i_dir[2], i_coo)

def construct_var_name():
    direction, coord, re_im = var_direction(), var_coord(), var_re_im()
    name = []
    for i_dir in direction:
        for i_coo in coord:
            for i_re in re_im:
                name.append( var_key_name( i_dir, i_coo, i_re ) )
    return name


def extract_data( d ):
    return {"Re[ 1, 0, 0]x":d[:, 1], "Im[ 1, 0, 0]x":d[:, 2],
            "Re[ 1, 0, 0]y":d[:, 3], "Im[ 1, 0, 0]y":d[:, 4],
            "Re[ 1, 0, 0]z":d[:, 5], "Im[ 1, 0, 0]z":d[:, 6],
            "Re[ 0, 1, 0]x":d[:, 7], "Im[ 0, 1, 0]x":d[:, 8],
            "Re[ 0, 1, 0]y":d[:, 9], "Im[ 0, 1, 0]y":d[:,10],
            "Re[ 0, 1, 0]z":d[:,11], "Im[ 0, 1, 0]z":d[:,12],
            "Re[ 0, 0, 1]x":d[:,13], "Im[ 0, 0, 1]x":d[:,14],
            "Re[ 0, 0, 1]y":d[:,15], "Im[ 0, 0, 1]y":d[:,16],
            "Re[ 0, 0, 1]z":d[:,17], "Im[ 0, 0, 1]z":d[:,18],
            "Re[-1, 1, 1]x":d[:,19], "Im[-1, 1, 1]x":d[:,20],
            "Re[-1, 1, 1]y":d[:,21], "Im[-1, 1, 1]y":d[:,22],
            "Re[-1, 1, 1]z":d[:,23], "Im[-1, 1, 1]z":d[:,24],
            "Re[ 1,-1, 1]x":d[:,25], "Im[ 1,-1, 1]x":d[:,26],
            "Re[ 1,-1, 1]y":d[:,27], "Im[ 1,-1, 1]y":d[:,28],
            "Re[ 1,-1, 1]z":d[:,29], "Im[ 1,-1, 1]z":d[:,30],
            "Re[ 1, 1,-1]x":d[:,31], "Im[ 1, 1,-1]x":d[:,32],
            "Re[ 1, 1,-1]y":d[:,33], "Im[ 1, 1,-1]y":d[:,34],
            "Re[ 1, 1,-1]z":d[:,35], "Im[ 1, 1,-1]z":d[:,36],
            "Re[-2, 1, 0]x":d[:,37], "Im[-2, 1, 0]x":d[:,38],
            "Re[-2, 1, 0]y":d[:,39], "Im[-2, 1, 0]y":d[:,40],
            "Re[-2, 1, 0]z":d[:,41], "Im[-2, 1, 0]z":d[:,42],
            "Re[ 1,-2, 0]x":d[:,43], "Im[ 1,-2, 0]x":d[:,44],
            "Re[ 1,-2, 0]y":d[:,45], "Im[ 1,-2, 0]y":d[:,46],
            "Re[ 1,-2, 0]z":d[:,47], "Im[ 1,-2, 0]z":d[:,48],
            "Re[-2, 0, 1]x":d[:,49], "Im[-2, 0, 1]x":d[:,50],
            "Re[-2, 0, 1]y":d[:,51], "Im[-2, 0, 1]y":d[:,52],
            "Re[-2, 0, 1]z":d[:,53], "Im[-2, 0, 1]z":d[:,54],
            "Re[ 0,-2, 1]x":d[:,55], "Im[ 0,-2, 1]x":d[:,56],
            "Re[ 0,-2, 1]y":d[:,57], "Im[ 0,-2, 1]y":d[:,58],
            "Re[ 0,-2, 1]z":d[:,59], "Im[ 0,-2, 1]z":d[:,60],
            "Re[ 1, 0,-2]x":d[:,61], "Im[ 1, 0,-2]x":d[:,62],
            "Re[ 1, 0,-2]y":d[:,63], "Im[ 1, 0,-2]y":d[:,64],
            "Re[ 1, 0,-2]z":d[:,65], "Im[ 1, 0,-2]z":d[:,66],
            "Re[ 0, 1,-2]x":d[:,67], "Im[ 0, 1,-2]x":d[:,68],
            "Re[ 0, 1,-2]y":d[:,69], "Im[ 0, 1,-2]y":d[:,70],
            "Re[ 0, 1,-2]z":d[:,71], "Im[ 0, 1,-2]z":d[:,72],


            "Re[-1, 0, 0]x":d[:,73], "Im[-1, 0, 0]x":d[:,74],
            "Re[-1, 0, 0]y":d[:,75], "Im[-1, 0, 0]y":d[:,76],
            "Re[-1, 0, 0]z":d[:,77], "Im[-1, 0, 0]z":d[:,78],
            "Re[ 0,-1, 0]x":d[:,79], "Im[ 0,-1, 0]x":d[:,80],
            "Re[ 0,-1, 0]y":d[:,81], "Im[ 0,-1, 0]y":d[:,82],
            "Re[ 0,-1, 0]z":d[:,83], "Im[ 0,-1, 0]z":d[:,84],
            "Re[ 0, 0,-1]x":d[:,85], "Im[ 0, 0,-1]x":d[:,86],
            "Re[ 0, 0,-1]y":d[:,87], "Im[ 0, 0,-1]y":d[:,88],
            "Re[ 0, 0,-1]z":d[:,89], "Im[ 0, 0,-1]z":d[:,90],
            "Re[ 1,-1,-1]x":d[:,91], "Im[ 1,-1,-1]x":d[:,92],
            "Re[ 1,-1,-1]y":d[:,93], "Im[ 1,-1,-1]y":d[:,94],
            "Re[ 1,-1,-1]z":d[:,95], "Im[ 1,-1,-1]z":d[:,96],
            "Re[-1, 1,-1]x":d[:,97], "Im[-1, 1,-1]x":d[:,98],
            "Re[-1, 1,-1]y":d[:,99], "Im[-1, 1,-1]y":d[:,100],
            "Re[-1, 1,-1]z":d[:,101], "Im[-1, 1,-1]z":d[:,102],
            "Re[-1,-1, 1]x":d[:,103], "Im[-1,-1, 1]x":d[:,104],
            "Re[-1,-1, 1]y":d[:,105], "Im[-1,-1, 1]y":d[:,106],
            "Re[-1,-1, 1]z":d[:,107], "Im[-1,-1, 1]z":d[:,108],
            "Re[ 2,-1, 0]x":d[:,109], "Im[ 2,-1, 0]x":d[:,110],
            "Re[ 2,-1, 0]y":d[:,111], "Im[ 2,-1, 0]y":d[:,112],
            "Re[ 2,-1, 0]z":d[:,113], "Im[ 2,-1, 0]z":d[:,114],
            "Re[-1, 2, 0]x":d[:,115], "Im[-1, 2, 0]x":d[:,116],
            "Re[-1, 2, 0]y":d[:,117], "Im[-1, 2, 0]y":d[:,118],
            "Re[-1, 2, 0]z":d[:,119], "Im[-1, 2, 0]z":d[:,120],
            "Re[ 2, 0,-1]x":d[:,121], "Im[ 2, 0,-1]x":d[:,122],
            "Re[ 2, 0,-1]y":d[:,123], "Im[ 2, 0,-1]y":d[:,124],
            "Re[ 2, 0,-1]z":d[:,125], "Im[ 2, 0,-1]z":d[:,126],
            "Re[ 0, 2,-1]x":d[:,127], "Im[ 0, 2,-1]x":d[:,128],
            "Re[ 0, 2,-1]y":d[:,129], "Im[ 0, 2,-1]y":d[:,130],
            "Re[ 0, 2,-1]z":d[:,131], "Im[ 0, 2,-1]z":d[:,132],
            "Re[-1, 0, 2]x":d[:,133], "Im[-1, 0, 2]x":d[:,134],
            "Re[-1, 0, 2]y":d[:,135], "Im[-1, 0, 2]y":d[:,136],
            "Re[-1, 0, 2]z":d[:,137], "Im[-1, 0, 2]z":d[:,138],
            "Re[ 0,-1, 2]x":d[:,139], "Im[ 0,-1, 2]x":d[:,140],
            "Re[ 0,-1, 2]y":d[:,141], "Im[ 0,-1, 2]y":d[:,142],
            "Re[ 0,-1, 2]z":d[:,143], "Im[ 0,-1, 2]z":d[:,144],
            
            "Re[ 3, 0, 0]x":d[:,145], "Im[ 3, 0, 0]x":d[:,146],
            "Re[ 3, 0, 0]y":d[:,147], "Im[ 3, 0, 0]y":d[:,148],
            "Re[ 3, 0, 0]z":d[:,149], "Im[ 3, 0, 0]z":d[:,150],
            "Re[ 0, 3, 0]x":d[:,151], "Im[ 0, 3, 0]x":d[:,152],
            "Re[ 0, 3, 0]y":d[:,153], "Im[ 0, 3, 0]y":d[:,154],
            "Re[ 0, 3, 0]z":d[:,155], "Im[ 0, 3, 0]z":d[:,156],            
            "Re[ 0, 0, 3]x":d[:,157], "Im[ 0, 0, 3]x":d[:,158],
            "Re[ 0, 0, 3]y":d[:,159], "Im[ 0, 0, 3]y":d[:,160],
            "Re[ 0, 0, 3]z":d[:,161], "Im[ 0, 0, 3]z":d[:,162],            
            "Re[ 2, 1, 0]x":d[:,163], "Im[ 2, 1, 0]x":d[:,164],
            "Re[ 2, 1, 0]y":d[:,165], "Im[ 2, 1, 0]y":d[:,166],
            "Re[ 2, 1, 0]z":d[:,167], "Im[ 2, 1, 0]z":d[:,168],
            "Re[ 2, 0, 1]x":d[:,169], "Im[ 2, 0, 1]x":d[:,170],
            "Re[ 2, 0, 1]y":d[:,171], "Im[ 2, 0, 1]y":d[:,172],
            "Re[ 2, 0, 1]z":d[:,173], "Im[ 2, 0, 1]z":d[:,174], 
            "Re[ 1, 2, 0]x":d[:,175], "Im[ 1, 2, 0]x":d[:,176],
            "Re[ 1, 2, 0]y":d[:,177], "Im[ 1, 2, 0]y":d[:,178],
            "Re[ 1, 2, 0]z":d[:,179], "Im[ 1, 2, 0]z":d[:,180],
            "Re[ 0, 2, 1]x":d[:,181], "Im[ 0, 2, 1]x":d[:,182],
            "Re[ 0, 2, 1]y":d[:,183], "Im[ 0, 2, 1]y":d[:,184],
            "Re[ 0, 2, 1]z":d[:,185], "Im[ 0, 2, 1]z":d[:,186],
            "Re[ 1, 0, 2]x":d[:,187], "Im[ 1, 0, 2]x":d[:,188],
            "Re[ 1, 0, 2]y":d[:,189], "Im[ 1, 0, 2]y":d[:,190],
            "Re[ 1, 0, 2]z":d[:,191], "Im[ 1, 0, 2]z":d[:,192],
            "Re[ 0, 1, 2]x":d[:,193], "Im[ 0, 1, 2]x":d[:,194],
            "Re[ 0, 1, 2]y":d[:,195], "Im[ 0, 1, 2]y":d[:,196],
            "Re[ 0, 1, 2]z":d[:,197], "Im[ 0, 1, 2]z":d[:,198],            
            "Re[ 1, 1, 1]x":d[:,199], "Im[ 1, 1, 1]x":d[:,200],
            "Re[ 1, 1, 1]y":d[:,201], "Im[ 1, 1, 1]y":d[:,202],
            "Re[ 1, 1, 1]z":d[:,203], "Im[ 1, 1, 1]z":d[:,204],

            "Re[-3, 0, 0]x":d[:,205], "Im[-3, 0, 0]x":d[:,206],
            "Re[-3, 0, 0]y":d[:,207], "Im[-3, 0, 0]y":d[:,208],
            "Re[-3, 0, 0]z":d[:,209], "Im[-3, 0, 0]z":d[:,210],
            "Re[ 0,-3, 0]x":d[:,211], "Im[ 0,-3, 0]x":d[:,212],
            "Re[ 0,-3, 0]y":d[:,213], "Im[ 0,-3, 0]y":d[:,214],
            "Re[ 0,-3, 0]z":d[:,215], "Im[ 0,-3, 0]z":d[:,216],            
            "Re[ 0, 0,-3]x":d[:,217], "Im[ 0, 0,-3]x":d[:,218],
            "Re[ 0, 0,-3]y":d[:,219], "Im[ 0, 0,-3]y":d[:,220],
            "Re[ 0, 0,-3]z":d[:,221], "Im[ 0, 0,-3]z":d[:,222],            
            "Re[-2,-1, 0]x":d[:,223], "Im[-2,-1, 0]x":d[:,224],
            "Re[-2,-1, 0]y":d[:,225], "Im[-2,-1, 0]y":d[:,226],
            "Re[-2,-1, 0]z":d[:,227], "Im[-2,-1, 0]z":d[:,228],
            "Re[-2, 0,-1]x":d[:,229], "Im[-2, 0,-1]x":d[:,230],
            "Re[-2, 0,-1]y":d[:,231], "Im[-2, 0,-1]y":d[:,232],
            "Re[-2, 0,-1]z":d[:,233], "Im[-2, 0,-1]z":d[:,234], 
            "Re[-1,-2, 0]x":d[:,235], "Im[-1,-2, 0]x":d[:,236],
            "Re[-1,-2, 0]y":d[:,237], "Im[-1,-2, 0]y":d[:,238],
            "Re[-1,-2, 0]z":d[:,239], "Im[-1,-2, 0]z":d[:,240],
            "Re[ 0,-2,-1]x":d[:,241], "Im[ 0,-2,-1]x":d[:,242],
            "Re[ 0,-2,-1]y":d[:,243], "Im[ 0,-2,-1]y":d[:,244],
            "Re[ 0,-2,-1]z":d[:,245], "Im[ 0,-2,-1]z":d[:,246],
            "Re[-1, 0,-2]x":d[:,247], "Im[-1, 0,-2]x":d[:,248],
            "Re[-1, 0,-2]y":d[:,249], "Im[-1, 0,-2]y":d[:,250],
            "Re[-1, 0,-2]z":d[:,251], "Im[-1, 0,-2]z":d[:,252],
            "Re[ 0,-1,-2]x":d[:,253], "Im[ 0,-1,-2]x":d[:,254],
            "Re[ 0,-1,-2]y":d[:,255], "Im[ 0,-1,-2]y":d[:,256],
            "Re[ 0,-1,-2]z":d[:,257], "Im[ 0,-1,-2]z":d[:,258],            
            "Re[-1,-1,-1]x":d[:,259], "Im[-1,-1,-1]x":d[:,260],
            "Re[-1,-1,-1]y":d[:,261], "Im[-1,-1,-1]y":d[:,262],
            "Re[-1,-1,-1]z":d[:,263], "Im[-1,-1,-1]z":d[:,264]

    }

font_title = {'family' : 'serif',
        'weight' : 'normal',
        'size'   : 18,}
font_label = {
        'weight' : 'normal',
        'size'   : 16,}

###########################
def plot_data(data, factor=1):
    t = data[:,0]
    dat = extract_data(data)
    for i_data in data_idx:
        try:
            i_file
        except NameError:
            legend.append( "%s" % i_data )
        else:
            legend.append( "%d:%s" % (i_file, i_data) )
        handle.append( ax.plot(t, dat[i_data] * factor, marker='.')[0] )

def plot_files(file_idx, data_idx):
    for i_file in file_idx:
        data = np.loadtxt( "res/ppar_1d_%d.dat" % i_file )
        plot_data(data)

import sys

def plot_all_collection( file_name, legend, val_limit):
    # loop over all files and get the key-val map
    data = list( map( np.loadtxt, file_name ) )
    dat = list( map( extract_data, data ) )
    t = data[0][:,0]
    # find the index for val_lower and val_upper
    idx_range = range( *list( map( lambda v: (np.abs(t-v)).argmin(), val_limit ) ) )
    # loop over all directions to plot
    for key in dat[0]:
        fig = plt.figure()
        ax = fig.add_subplot( 1, 1, 1 )
        print "Processing direction %s..." % key
        lgd = list( map( lambda s: "%s (%s)" % (key, s), legend ) )
        handle = []
        for d in dat:
            handle.append( ax.plot(t[idx_range], d[key][idx_range], marker=".")[0] )
        ax.legend( handle, lgd, shadow=True, loc='upper center' )
        ax.grid( True )
        plt.xlabel( r"Time (fs)", fontdict=font_label )
        plt.ylabel( r"Polarization (arb.)", fontdict=font_label )
        plt.title( r"Comparison of Polarization for %s in Ensemble" % key,
                   fontdict=font_title )
        plt.xlim( [ t[idx_range[0]], t[idx_range[-1]] ] )
        plt.savefig( "fig/ppar_%s.png" % key )
        plt.close()

def plot_all_collection_total_pol( file_name, legend, val_limit):
    # loop over all files and get the key-val map
    data = [ map( np.loadtxt, file_name ) ]
    dat = [ map( extract_data, data ) ]
    t = data[0][:,0]
    # find the index for val_lower and val_upper
    idx_range = range( *[ map( lambda v: (np.abs(t-v)).argmin(), val_limit ) ] )
    direction, coord, re_im = var_direction(), var_coord(), var_re_im()
    for i_dir in direction:
        fig = plt.figure()
        ax = fig.add_subplot( 1, 1, 1 )
        lgd = [ map( lambda l: "%s (%s)" % (i_dir, l), legend ) ]
        handle = []
        print "Processing direction %s..." % i_dir
        for d in dat:
            s = np.zeros( len(t) )
            for i_coo in coord:
                for i_re in re_im:
                    name = var_key_name( i_dir, i_coo, i_re )
                    s += np.array(d[name]) * np.array(d[name])
            handle.append( ax.plot(t[idx_range], s[idx_range], marker=".")[0] )
        ax.lengend( handle, lgd, shadow=True, loc='upper center' )
        ax.grid( True )
        plt.xlabel( r"Time (fs)", fontdict=font_label )
        plt.ylabel( r"Polarization (arb.)", fontdict=font_label )
        plt.title( r"Comparison of Polarization for %s in Ensemble" % key,
                   fontdict=font_title )
        plt.xlim( [ t[idx_range[0]], t[idx_range[-1]] ] )
        plt.savefig( "fig/ppar_%s.png" % key )
        plt.close()


if __name__ == "__main__":
    file_name = [ "/data1/home/tianmin/test/dm2/dm_euler_polar/ana/mpi_spec_1d/res/ppar_1d.dat",
                  "/data1/home/tianmin/test/dm2/dm_euler_polar_same_dir/ana/mpi_spec_1d/res/ppar_1d.dat" ]
    legend = [ "isotropic", "along z" ]
    #plot_all_collection( file_name, legend, [0.0, 300.0] )
    construct_var_name()
